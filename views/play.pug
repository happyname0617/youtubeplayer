doctype html
include head.pug
body
  include menu_login.pug
  .container-fluid.theme-showcase(role='main')
    .row
      .col-md-2
      .col-md-8.col-xs-12
        .embed-responsive.embed-responsive-16by9
          #player
        .progress
          .progress-bar(role='progressbar', aria-valuenow='0', aria-valuemin='0', aria-valuemax='100', style='width: 0%;')
            | 60%
        p#playcontrol
        p
          button.repeatPlay.btn.btn-primary.btn-block START
        p
          ul.sentence
        p#underline_str(hidden)
        p#solution_str
        textarea#inputstr(rows='4', cols='50')
        .btn-group.btn-group-justified(role='group', aria-label='...')
          .btn-group(role='group')
            button.btn.btn-success#answer Check Answer
          .btn-group(role='group')
            button.btn.btn-warning#answerShow Show Answer
          .btn-group(role='group')
            button.next.btn.btn-danger Skip
        p
        .well#playOption
          h4 Play Option
          label rest time between repeating
            select.control_restTime
              option(value='0.0') 0.0 sec
              option(value='0.5') 0.5 sec
              option(value='1.0', selected) 1.0 sec
              option(value='3.0') 3.0 sec
              option(value='5.0') 5.0 sec
          .checkbox
            label
              input#caseSensitiveToggle(type='checkbox')
              |  Case Sensitive On
          // .checkbox
          //   label
          //     input#answerToggle(type='checkbox')
          //     |  Show/Hide Answer
        p
          a.btn.btn-default.btn-block(href='/') Back to MyBox

      .col-md-2
  script.
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    ga('create', 'UA-100905207-1', 'auto');
    ga('send', 'pageview');
  script.
    // 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');
    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var player;
    var userid = 'bskim'
    var margin = 0.2; //sec
    var restTime = 1.0;
    var videoID = '#{id}';
    //var times = [['2.216','3.576'],['03.576','05.616'],['05.616','8.096'],['8.336','10.336'],['10.616','12.616'],['13.576','15.496']];
    var videoRecord = !{mytime};
    var c_letter='letter'
    if(videoRecord.videoCaptionLangCode=='ko')
    {
      c_letter='letter nonAlphbetLetter'
    }
      
    var times = videoRecord.caption;
    var totalCount = times.length;
    var currIdx = parseInt(videoRecord.currentIndex);
    function onYouTubeIframeAPIReady() {
      player = new YT.Player('player', {
        height: '390',
        width: '640',
        playerVars : {
                    'autoplay' : 0,
                    'rel' : 0,
                    'showinfo' : 0,
                    'showsearch' : 0,
                    'controls' : 0,
                    'loop' : 0,
                    'enablejsapi' : 1,
                    'disablekb': 1,
                    'fs':0,
                    'playsinline':1,
                    'cc_load_policy':0,
                    'autohide':1
                  },
        videoId: videoRecord.YouTubeVideoID,
        events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
        }
      });
    }
    function updateInput()
    {
      var str = myconvert(times[currIdx][2],$('#inputstr').val());

        var html='';
        for(var i=0; i<str.length;i++)
        {
          var tempclass = '';
          if(str[i]==marker)
          {
            html+='<li class="'+c_letter+'" normal">&nbsp</li>';                
          }
          else if(str[i]==' ')
          {
            html+='<li class="space">'+str[i]+'</li>';                
            
          }
          else
          {
            html+='<li class="'+c_letter+' normal">'+str[i]+'</li>';                
          }

        }
        $('.sentence').html(html)
    }
      
    // 4. The API will call this function when the video player is ready.
    function onPlayerReady(event) {
      updateInput();
      if(currIdx==0)
      { 
        alert('Click blue [START] button');
      }
          
    }
    // 5. The API calls this function when the player's state changes.
    //    The function indicates that when playing a video (state=1),
    //    the player should play for six seconds and then stop.
    var done = false;
    var timer;
    var timersleep ;
    function onPlayerStateChange(event) {
      try
      {
        player.unloadModule("captions");  
        player.unloadModule("cc"); 
      }
      catch (exception)
      {
        alert("Error occured: " + exception);//or any message
        LoggerUtil.logError("Error when trying to unloadModule youtube captions: " + exception);
      }

      if (event.data == YT.PlayerState.PLAYING && !done) {
      //setTimeout(repeatVideo, getDuration(currIdx,margin))
      done = true;
      }

    }

    function repeatAfterSec()
    {
      player.pauseVideo();
      clearTimeout(timer);
      timersleep = setTimeout(repeatVideo,restTime*1000);
    }

    function repeatVideoFromClose2End(time) {
      player.seekTo(time);
      player.playVideo();
      timer = setTimeout(repeatAfterSec,getDuration(currIdx,margin));
      clearTimeout(timersleep);

    }
    
    function updateProgressbar()
    {
      $('.progress-bar').attr('aria-valuenow',currIdx);
      $('.progress-bar').attr('aria-valuemax',times.length);
      $('.progress-bar').css('width', (currIdx+1)/times.length*100+'%');
      $('.progress-bar').text(currIdx+1+'/'+times.length);        
      
    }
    function repeatVideo() {
      player.seekTo(getStartTime(currIdx,margin));
      player.playVideo();
      timer = setTimeout(repeatAfterSec,getDuration(currIdx,margin));
      clearTimeout(timersleep);
      updateProgressbar();
      $('#solution_str').text(times[currIdx][2]);

    }

    function getStartTime(index,margin)
    {
      var start = parseFloat(times[index][0])-margin
      return start>=0?start:0
    }
    function getEndTime(index,margin)
    {
     return parseFloat(times[index][1])+margin;
    }
    function getDuration(index,margin)
    {
      var duration = (getEndTime(index,margin)-getStartTime(index,margin))*1000;
      return duration;
    }

    var marker = '+';
    
    function myconvert(solution, input)
    {
      // console.log('solution:',solution);
      // console.log('input:',input);
      solution = solution.trim();
      input = input.trim();
      //console.log(typeof solution);
      var temp = solution.replace(/[\u3131-\u314e|\u314f-\u3163|\uac00-\ud7a3|\w|äöüÄÖÜß|\u3000-\u303f\u3040-\u309f\u30a0-\u30ff\uff00-\uff9f\u4e00-\u9faf\u3400-\u4dbf]/gi,marker);
      //console.log('temp:',temp)
      // japanese \u3000-\u303f\u3040-\u309f\u30a0-\u30ff\uff00-\uff9f\u4e00-\u9faf\u3400-\u4dbf
      // korean \u3131-\u314e|\u314f-\u3163|\uac00-\ud7a3
      var temp2 = input.replace(/[^\u3131-\u314e|\u314f-\u3163|\uac00-\ud7a3|\w|äöüÄÖÜß|\u3000-\u303f\u3040-\u309f\u30a0-\u30ff\uff00-\uff9f\u4e00-\u9faf\u3400-\u4dbf]/gi,'')
      //console.log('temp2:',temp2)
      for(var i=0; i<temp2.length; i++)
      {
        temp = temp.replace(marker,temp2[i])
      }
      // console.log('result:',temp)
      return temp;
    }
    
    //compare user input to colution string and return boolean array
    function evaluateAnswer(solution, input, caseSensitiveOn=false)
    {
      var result =[]; //boolean array
      var strRef = myconvert(solution, solution);
      var strIn = myconvert(solution, input);
      
      for(var i=0;i<strRef.length;i++)
      {
        if(!caseSensitiveOn)
        {
         strRef = strRef.toLocaleLowerCase();
         strIn = strIn.toLocaleLowerCase();
        }
        if(strRef[i]==strIn[i])
        {
          result.push(true);
        } 
        else
          result.push(false);
      }
      return result;
    }

    // var INPUTMODE = {
    //   IDLE : {value: 0, name: "idle status", code: "i"}, 
    //   ANSWER: {value: 1, name: "answer status", code: "a"}, 
    // };
    
    // var currentInputMode = INPUTMODE.IDLE;
    $(document).ready(function(){
      $('.player').addClass('embed-responsive-item')
      updateProgressbar();
      $('#solution_str').text(times[currIdx][2]);
      // $('#dictationarea').hide();
      $('#solution_str').hide();
      $('#editSubtitle').hide();
      $('#inputstr').val(times[currIdx][3]);
      //$('#underline_str').text(myconvert(times[currIdx][2],$('#inputstr').val()));
      $('.repeatPlay').text('START');
      $('#answer').prop('disabled', true);
      $('#answerShow').prop('disabled', true);
      $('.next').prop('disabled', true);
      $('#inputstr').prop('disabled', true);
      $('#playOption').hide();
      


      
      $('#inputstr').focus();
      updateInput();

      $(document).keypress(function(e)
      {
        console.log(e.keyCode)
        $('#inputstr').focus();
      })

      $("#inputstr").on('keyup', function (e) {
        if (e.keyCode != 13) {
          updateInput();
        }

      });
      

      $("#inputstr").on('keypress', function (e) {
       
        if (e.keyCode == 13) {
          e.preventDefault();
          console.log('enter key typed');
          // if(currentInputMode==INPUTMODE.IDLE)
          // {
          $('#answer').click();
          // }
          // else if(currentInputMode==INPUTMODE.ANSWER)
          // {
          //   $('.next').click();
          //   currentInputMode=INPUTMODE.IDLE;
          // }
        }
      })

    
      var seenAnswer = 0;
      $('#answerShow').click(function(){
        $('#solution_str').show();
        seenAnswer = true;
        $('#inputstr').focus();

        
      })
      $('#EditToggle').click(function(){
        $('#editSubtitle').toggle();
      })
      
      var trial = 0;

      $('#answer').click(function(){
        $('#solution_str').text(times[currIdx][2]);
        //times[currIdx][3] = $('#inputstr').val();
        var str= myconvert(times[currIdx][2],$('#inputstr').val())
        var caseSensitiveOn = $('#caseSensitiveToggle').prop('checked');
        //console.log('caseSensitiveOn:'+caseSensitiveOn);
        var result = evaluateAnswer(times[currIdx][2],$('#inputstr').val(),caseSensitiveOn);

        var html='';
        for(var i=0; i<result.length;i++)
        {
          var tempclass = '';
          if(str[i]==marker)
          {
            html+='<li class="'+c_letter+' incorrect">&nbsp</li>';                
          }
          else if(str[i]==' ')
          {
            html+='<li class="space">'+str[i]+'</li>';                
            
          }
          else if(result[i])
          {
            html+='<li class="'+c_letter+' correct">'+str[i]+'</li>';                
          }
          else
          {
            html+='<li class="'+c_letter+' incorrect">'+str[i]+'</li>';                
          }
        }
        $('.sentence').html(html);
        //var result = evaluateAnswer(times[currIdx][2],$('#inputstr').val(),true);
        var allTrue =result.reduce(function(acc,curr){return acc&&curr},true);
        console.log('allTrue:'+allTrue);
        if(allTrue){
          updateSentence(currIdx,true,trial);
          trial = 0;
          seenAnswer=0;
          alert("Super! Hit Enter key to the next sentence!");
          next();
          $('#inputstr').focus();
        }
        else
        {
          trial++;
        }
        $('#inputstr').focus();
  
      })


      function next()
      {
        //times[currIdx][3] = $('#inputstr').val()
        if(currIdx==times.length-1) //if last item
        {
          //TODO :show user's study activity e.g. passed, failed, skipped
          alert("Wow! You just finished a video. Hit Enter key to go back to your box");
          window.location.href = "/";
        }
        else
        {
          currIdx=Math.min(currIdx+1,times.length-1);
          //$('.debug').text(currIdx+'/'+totalCount)
          clearTimeout(timer);
          clearTimeout(timersleep);
          repeatVideo();
          //$('#solution_str').text('');
          $('#solution_str').hide();
          $('#inputstr').val('');
          //$('#underline_str').text(myconvert(times[currIdx][2],$('#inputstr').val()));
          updateInput();
        }        
      }
      
      //skip
      $('.next').click(function(){
        //save();
        updateSentence(currIdx,false,trial);
        next();
        $('#inputstr').focus();
      })



      $('.control_margin').change(function(){
        // $('.debug').text('control_margin')
        // margin =  $('.control_margin').val();
        // console.log('margin:',margin)
        clearTimeout(timer);
        clearTimeout(timersleep);
        repeatVideo();
      })

      $('.control_restTime').change(function(){
        $('.debug').text('control_restTime')
        restTime =  $('.control_restTime').val();
      })

      function RepeatPlay()
      {
         $('.debug').text('repeatPlay')
        clearTimeout(timer);
        clearTimeout(timersleep);
        repeatVideo();
        $('.repeatPlay').text('PAUSE');
        $('#answer').prop('disabled', false);
        $('#answerShow').prop('disabled', false);
        $('.next').prop('disabled', false);
        $('#inputstr').prop('disabled', false);
        $('#playOption').show();


      }
    
      $('.repeatPlay').click(function(){
        if($('.repeatPlay').text()=='PAUSE')
        {
          RepeatPause();
        }
        else
        {
          RepeatPlay();
          $('#inputstr').focus();

        }
      })

      function RepeatPause(){
        $('.debug').text('repeatPause')
        clearTimeout(timer);
        clearTimeout(timersleep);
        player.pauseVideo();
        $('.repeatPlay').text('RESUME');
        $('#answer').prop('disabled', true);
        $('#answerShow').prop('disabled', true);
        $('.next').prop('disabled', true);
        $('#inputstr').prop('disabled', true);
        $('#playOption').hide();


        
      }


      // function save()
      // {
      //   $('.debug').text('save');
      //   times[currIdx][3] = $('#inputstr').val();
      //   videoRecord.currentIndex = currIdx;
      //   videoRecord.caption = times;
      //   $.post( "/update", {videoRecord:JSON.stringify(videoRecord)} );
      // }
      
      function updateSentence(_index,_isCorrect,_trials)
      {
        $.post( "/update/sentence", {videoID:videoRecord._id,index:_index,isCorrect:_isCorrect,trials:_trials} );
      }

      // $('.save').click(function(){
      //   save();
      // })
    })
